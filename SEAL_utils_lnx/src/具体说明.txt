本程序实现了计算lnx的功能，附带提供一个可以直接使用的基于nlopt库的多项式拟合系数计算函数
本程序开发了utils类，以实现对lnx的计算。
utils类将关键步骤分别封装为成员函数，希望接下来的开发者能够将指数和三角函数的计算集成到utils类中，并合理使用这些封装的函数
封装的函数分别实现了初始化，初始输入值加密，结果解密，中间变量解密和比较大小功能。
指数和三角函数的计算功能需要后续开发者自行开发。
以指数函数为例：
    1.main:为指数函数选择一个模式（以模式3为例），在main函数中加入指数函数的判断逻辑，验证模式3下输入值的合法性
    2.utils:
        2.1:在private中创建vector数组，存储系数模数
        2.2:根据计算过程，在private中创建需要的几个明文和密文
        2.3在init函数中加入模式3下初始化系数模数和缩放因子的判断逻辑
        2.4创建一个指数计算函数，接收密文，最后打印结果。可以使用类里包含的指针，变量和解密函数
        2.5修改utils构造函数，加入模式3下的判断逻辑
        2.6如果需要的话，编写一个计算相对误差的函数

开发者设想的前端情况：
    前端实现功能：接受初始输入值和模式，初始化SEAL库相关参数，判断合法性，加密相关变量（lnx计算时，加密一个0～1之间的数作为比较大小的系数，加密初始输入值，加密kind）
                将加密后的变量和创建的SEAL库相关对象传给后端。
                后端返回结果后，前段解密并打印结果。

程序运行流程：

输入变量和模式-->判断数据合法性-->创建utils类实体（调用构造函数）-->调用init函数初始化-->调用encrypt_input函数加密初始输入值-->调用计算函数（计算，解密，打印）-->调用比较函数

为什只添加至精度5：由于系数模数设置影响，在展开项数为5时，精度其实已经不如展开项数4了。后续需要优化算法，可能精度还会提高一点吧。