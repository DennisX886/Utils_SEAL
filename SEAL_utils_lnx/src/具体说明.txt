本程序实现了计算lnx,cosx,sinx,exp的功能，附带提供一个可以直接使用的基于nlopt库的多项式拟合系数计算函数
本程序开发了utils类，以实现对上述函数的计算。
共用的封装的函数分别实现了初始化，初始输入值加密，结果解密，中间变量解密，中间变量相关量打印功能。
程序框架：
以指数函数为例：
    1.main:为指数函数选择一个模式（以模式3为例），在main函数中加入指数函数的判断逻辑，验证模式3下输入值的合法性
    2.utils:
        2.1:在private中创建vector数组，存储系数模数
        2.2:根据计算过程，在private中创建需要的几个明文和密文
        2.3在init函数中加入模式3下初始化系数模数和缩放因子的判断逻辑
        2.4创建一个指数计算函数，接收密文，最后打印结果。可以使用类里包含的指针，变量和解密函数
        2.5修改utils构造函数，加入模式3下的判断逻辑
        2.6如果需要的话，编写一个计算相对误差的函数

程序运行流程：

输入变量和模式-->判断数据合法性-->创建utils类实体（调用构造函数）-->调用init函数初始化-->调用encrypt_input函数加密初始输入值-->调用计算函数（计算，解密，打印）-->调用比较函数

为什只添加至精度5：由于系数模数设置影响，在展开项数为5时，精度其实已经和展开项数4时差距不大了。后续需要优化算法，可能精度还会提高一点吧。

旧三角函数算法：先将其归并到一定范围内，然后运用倍角公式缩小，泰勒之后再放大。三角函数中，只计算正弦和余弦，共同使用一套算法。新三角函数算法见“算法说明”



后续改进方向：
    1 代码可读性，可维护性和格式调整
    2 重复步骤优化：对数函数系数的计算
    3 函数封装调整：计算函数封装为一个，比较函数封装为一个，关键计算步骤封装为一个
    4 代码注释和报告文件
    5 指数算法瑕疵较多，需要修改
    6 增强程序健壮性，使用添加try_catch等方法
    7 前后端对接
    8 个别小问题，比如运行文件的名字，系数表的路径
目标（个人）：做成一个可以从github下载下来，编译，然后就可以使用的程序


算法说明：
    对数：将输入数据预先处理为x=m*2^i形式，其中i为整数。后续在加密状态下计算对数时就有：lnx=lnm+iln2。ln2是事先预置好的数值，lnm使用lnx在x=1处的泰勒展开计算，提供至多五项展开。
    三角函数：将输入数据预先规约到[-pai/2,pai/2]之中，然后在加密状态下使用多项式a1+a2x+a3x^2……拟合数据。其中系数a1,a2等通过雷米兹算法得到，至多提供5项展开
    指数：将数据预先处理为x=m^4^i的形式，其中i是整数。随后在加密状态下利用多项式拟合exp(m)，拟合多项式的形式和系数的计算方法与三角函数相同。将结果解密后，计算exp(m)^4^i得到最终结果
        需要注意的是，指数算法在加密部分存在缺陷，指定阶数越小精度越高，且误差较大（相对误差最大可达1.2%～1.3%）。后续需要改良。